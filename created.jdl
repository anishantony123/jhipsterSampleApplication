/**
 * The extended user table. 
 * contains churchnear specific information.
 */
entity CNUser {
	place String required,
	state String required,
	phone String required,
	country String required,
	canAdd Boolean,
	canReview Boolean
}


relationship OneToMany {
  CNUser{user} to User
}

relationship OneToMany {
  CNUser{preferredMassLanguage} to LanguageMaster
}

relationship OneToMany {
  CNUser{preferredChurchType} to ChurchType
}

/**
 * The master table which store the language information. 
 * This should be filled while system setup.
 */
entity LanguageMaster {
	name String required,
	status String required minlength(1) maxlength(1)	
}

/**
 * Master table for explaining the church type. 
 * Catholic, RCSC, Jacobite, are the examples.
 */
entity ChurchType {
	type String required
}



relationship OneToMany {
  ChurchType{parentType} to ChurchType
}


/**
 * Explains the type of the church. 
 * Forone church, Pligrim center are the example.
 */
entity ChurchSubType {
	type String required
}

relationship OneToMany {
  ChurchSubType{churchType} to ChurchType
}


/**
 * Complete information regarding the church. 
 * Contains the information such name, location, highlight informations.
 */
entity Church {
	name String required,
	locality String required,
	place String required,
	district String required,
	state String required,
	country String required,
	pincode String required,
	longitude String,
	latitude String,
	actual_address String,//This should be auto generated
	saint String required,
	vicarSince LocalDate,
	createdDate LocalDate,
	updatedDate LocalDate,
	vicarDetailsAvailable Boolean,
	massTimingAvaliable Boolean,
	galaryAvailable Boolean,
	confessionTimingAvailable Boolean,
	novenaDetailsAvailable Boolean,
	churchHighlight_1 String,
	churchHighlight_2 String,
	churchHighlight_3 String,
	churchHighlight_4 String,
	churchHighlight_5 String,
	churchHighlight_6 String,
	churchHighlight_7 String,
	churchHighlight_8 String,
	//reviewedBy
	status String required minlength(1) maxlength(1)
}

relationship OneToMany {
  Church{churchType} to ChurchType
}

relationship OneToMany {
  Church{churchSubType} to ChurchSubType
}

relationship OneToMany {
  Church{createdBy} to CNUser
}

relationship OneToMany {
  Church{updatedBy} to CNUser
}

relationship OneToMany {
  Church{reviewedBy} to CNUser
}

relationship ManyToOne {
  Church{images} to ChurchImages
}


/**
 * Set of images for the church. 
 * Images are categorized based on its type.
 */
entity ChurchImages {
	imagePath String required,
	imageType String
	
}
relationship OneToMany {
  ChurchImages{church} to Church
}


/**
 * Vicar information. 
 * Explains the details of vicar.
 */
entity Vicar {
	name String required,
	homeTown String,
	//vicarImage 
	//vicarAt
	highlight_1 String,
	highlight_2 String,
	highlight_3 String,
	highlight_4 String,
	highlight_5 String,
	//createdBy
	createdDate LocalDate,
	//updatedBy
	updatedDate LocalDate
	
}

relationship OneToMany {
  Vicar{vicarAt} to Church
}

relationship OneToMany {
  Vicar{createdBy} to CNUser
}

relationship OneToMany {
  Vicar{updatedBy} to CNUser
}

relationship ManyToOne {
  Vicar{images} to VicarImages
}

/**
 * Images of Vicar. 
 * Contains the set of images of vicars.
 */
entity VicarImages {
	imagePath String required,
	imageType String
	
}

relationship OneToMany {
  VicarImages{vicar} to Vicar
}


/**
 * Locality Suggest master table. 
 * For auto filling purpose.
 */
entity LocalitySuggester {
	locality String,
	place String,
	distrct String,
	state String,
	country String
}
/**
 * Special notes master table. 
 * convension, first holy mass are the examples.
 */
entity NoteTypeMaster {
	name String,
	description String
}


/**
 * Information about the special occasions. 
 */
entity ChurchNote {
	fromDate LocalDate,
	toDate LocalDate,
	fromTime Long,
	toTime Long,
	description String
}



relationship OneToMany {
  ChurchNote{church} to Church
}

relationship OneToMany {
  ChurchNote{noteType} to NoteTypeMaster
}


/**
 * Images of Vicar. 
 * Contains the set of images of vicars.
 */
entity ConfessionTiming {
	confessionDate LocalDate,
	fromTime Long,
	toTime Long,
	location String,
	note String,
    isDateLocked Boolean
}

relationship OneToMany {
  ConfessionTiming{church} to Church
}

/**
 * Details about mass timing. 
 * Each day mass timing.
 */
entity MassTiming {
    dateTime ZonedDateTime required,
    isSpecialMass Boolean,
    description String,
    note String,
    isDateLocked Boolean
}

relationship OneToMany {
  MassTiming{language} to LanguageMaster
}

relationship OneToMany {
  MassTiming{novenaType} to NovenaType
}

relationship OneToMany {
  MassTiming{vicar} to Vicar
}

entity NovenaType {
    name String required,
    description String

}

relationship OneToMany {
  NovenaType{churchType} to ChurchType
}

/**
 * Master table of description about the mass. 
 * Detaild mass, mass with novena, etc.
 */
entity MassType {
    name String required,
    haveNovena Boolean

}





relationship OneToMany {
  MassType{churchType} to ChurchType
}

/**
 * User favorate church
 */
entity UserFavorates {

}

relationship OneToMany {
  UserFavorates{church} to Church
}

relationship OneToMany {
  UserFavorates{cnUser} to CNUser
}




/**
 * Church timing job entry
 */
entity ChurchTimingJob {
    day String,
    time Long,
    lastRun ZonedDateTime,
    nextRun ZonedDateTime,
    defaultNote String
}

relationship OneToMany {
  ChurchTimingJob{church} to Church
}

relationship OneToMany {
  ChurchTimingJob{massType} to MassType
}

relationship OneToMany {
  ChurchTimingJob{language} to LanguageMaster
}

relationship OneToMany {
  ChurchTimingJob{novenaType} to NovenaType
}

relationship OneToMany {
  ChurchTimingJob{vicar} to Vicar
}

/**
 * Confession timing job entries
 */
entity ConfessionTimingJob {
    day String,
    fromTime Long,
    toTime Long,
    lastRun ZonedDateTime,
    nextRun ZonedDateTime,
    location String,
    defaultNote String
}

relationship OneToMany {
  ConfessionTimingJob{church} to Church
}

paginate Category with pagination
dto * with mapstruct
service all with serviceImpl
